{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\OneDrive\\\\Documentos\\\\Aprendizado\\\\React\\\\netflixclone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb.js';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport MovieRow from './components/MovieRow';\nimport Header from './components/Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false); //Quando a tela for carregada\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list); //Pegando o featured\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n  }, []); //Monitorar Scroll\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faChevronLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faChevronRight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      black: blackHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) =>\n      /*#__PURE__*/\n      //Loop\n      _jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"Direitos de imagem para Netflix\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 40\n      }, this), \"Dados pegos do site Themoviedb.org\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}, \"X/TsTIBWl4G5VJMk6QGmyiovK0c=\");","map":{"version":3,"sources":["C:/Users/mateu/OneDrive/Documentos/Aprendizado/React/netflixclone/src/App.js"],"names":["React","useEffect","useState","Tmdb","FeaturedMovie","MovieRow","Header","FontAwesomeIcon","faCoffee","faChevronLeft","faChevronRight","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","loadAll","list","getHomeList","originals","filter","i","slug","randomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","scrollListener","window","scrollY","addEventListener","removeEventListener","map","item","key","title"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb.js';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport MovieRow from './components/MovieRow';\nimport Header from './components/Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  //Quando a tela for carregada\n  useEffect(()=>{\n    const loadAll = async () => {\n\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o featured\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id,'tv');\n      setFeaturedData(chosenInfo);\n\n    }\n    loadAll();\n  },[]);\n\n  //Monitorar Scroll\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      }else{\n        setBlackHeader(false);\n      }\n    }\n    window.addEventListener('scroll',scrollListener);\n    return () => {\n      window.removeEventListener('scroll',scrollListener);\n    }\n  },[]);\n\n  return (\n    <div className=\"page\">\n      <FontAwesomeIcon icon={faChevronLeft} />\n      <FontAwesomeIcon icon={faChevronRight} />\n      <Header black={blackHeader}/>\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item,key)=>( //Loop\n          <MovieRow key={key} title={item.title} items={item.items}/>\n        ))}\n      </section>\n\n      <footer>\n        Direitos de imagem para Netflix<br/>\n        Dados pegos do site Themoviedb.org\n      </footer>\n\n    </div>\n  );\n\n}"]},"metadata":{},"sourceType":"module"}